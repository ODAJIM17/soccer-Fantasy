@inherits LayoutComponentBase

<MudThemeProvider IsDarkMode="_darkMode" />
<MudDialogProvider />
<MudSnackbarProvider />
<MudPopoverProvider />

<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu"
                       Color="Color.Inherit"
                       Edge="Edge.Start"
                       OnClick="@((e) => DrawerToggle())" />
        <MudLink Href="/"
                 Typo="Typo.h5"
                 Class="ml-3"
                 Color="Color.Inherit">
            @Localizer["Title"]
        </MudLink>
        <MudSpacer />
        <MudMenu Icon="@Icons.Material.Filled.Settings"
                 Color="Color.Inherit"
                 ActivationEvent="@MouseEvent.MouseOver"
                 AnchorOrigin="Origin.BottomRight"
                 TransformOrigin="Origin.TopRight">
            @* <AuthLinks /> *@
        </MudMenu>
        <MudIconButton Icon="@_icon"
                       Color="Color.Inherit"
                       Edge="Edge.Start"
                       OnClick="@((e) => DarkModeToggle())" />
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen"
               ClipMode="DrawerClipMode.Always"
               Elevation="2">
        <NavMenu />
    </MudDrawer>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.Large" Style="margin-top: 3rem">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    private bool _drawerOpen = true;
    private string _icon = Icons.Material.Filled.DarkMode;
    private bool _darkMode { get; set; } = true;

    [Inject] private IStringLocalizer<Literals> Localizer { get; set; } = null!;

    private void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    private void DarkModeToggle()
    {
        _darkMode = !_darkMode;
        _icon = _darkMode ? Icons.Material.Filled.LightMode : Icons.Material.Filled.DarkMode;
    }

}